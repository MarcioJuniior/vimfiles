# Function
snippet fun
	function ${1:function_name}(${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {
		${2}
	}
# Immediate function
snippet (f
	(function(${1}) {
		${3}
	}(${2}));
# if
snippet if
	if (${1:true}) {
		${2}
	}
# if ... else
snippet ife
	if (${1:true}) {
		${2}
	} else {
		${3}
	}
# tertiary conditional
snippet ter
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch (${1:expression}) {
		case '${3:case}':
			${4}
			break;
		${5}
		default:
			${2}
	}
# case
snippet case
	case '${1:case}':
		${2}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0, length = ${1:array}.length; $2 < length; $2 ++) {
		var ${3:v} = $1[$2];${4:}
	}
snippet forEach
	forEach(function(${1}) {
		${2}
	});
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# try
snippet try
	try {
		${1:/* code */}
	} catch (${2:e}) {
		${3:/* handle error */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10});
# console.log
snippet cl
	console.log(${1});
# return
snippet ret
	return ${1:result}
# for (property in object ) { ... }
snippet forin
	for (var ${1:prop} in ${2:Things}) {
		${3:$2[$1]}
	}
# docstring
snippet /**
	/**
	 * ${1:description}
	 *
	 */
snippet @par
	@param {${1:type}} ${2:name} ${3:description}
snippet @ret
	@return {${1:type}} ${2:description}
# JSON.parse
snippet jsonp
	JSON.parse(${1:jstr});
# JSON.stringify
snippet jsons
	JSON.stringify(${1:object});
# Quick object
snippet obj
	{
		${1}: ${2}
	}
# Describe
snippet des
	describe(${1:description}, function() {
		${2}
	});
# It
snippet it
	it(${1:description}, function() {
		${2}
	});
# It Async
snippet ita
	it(${1:description}, function(done) {
		${2}
	});
# Context
snippet cont
	context(${1:description}, function() {
		${2}
	});
snippet bef
	beforeEach(function() {
		${1}
	});
snippet aft
	afterEach(function() {
		${1}
	});
